arrange(desc(rad_ib)) %>%
slice_head (n=3)
top_trees_2007 <- trees_data %>%
+ filter(stand == 5, year == 2007) %>%
+ arrange(desc(rad_ib)) %>%
+ slice_head (n=3)
# Check the column names in the dataset
colnames(trees_data)
top_trees_2007 <- trees_data %>%
filter(standID == 5, year == 2007) %>%   # Use 'standID' for stand column
arrange(desc(rad_ib)) %>%                 # Sort by descending radius at breast height
slice_head(n = 3)                         # Get the top 3 trees
top_trees_2007 <- tree_data %>%
filter(standID == 5, year == 2007) %>%
arrange(desc(rad_b)) %>%
slice_head(n=3)
top_trees_2007 <- trees_data %>%
+ filter(standID == 5, year == 2007) %>%
+ arrange(desc(rad_b)) %>%
+ slice_head(n=3)
colnames(trees_data)
glimpse(trees_data)
top_trees_2007 <- trees_data %>%
filter(standID == 5, year == 2007) %>%
arrange(desc(rad_ib)) %>%
slice_head(n = 3)
top_trees_2007 <- trees_data %>%
filter(standID == 5, year == 2007) %>%
arrange(desc(rad_ib)) %>%
slice_head(n = 3)
top_trees_2007$treeID
print(smallest_trees_2007)
print(smallest_trees_2007)
colnames(trees_data)
unique(trees_data$standID
unique(trees_data$standID
unique(trees_data$standID)
print(smallest_trees_2007) # Display result
print(smallest_trees_2007) # Display result
glimpse(trees_data)
filter(trees_data, standID == 3, year == 2007)
print(smallest_trees_2007)
library(dplyr)
# Question 9: Reduce the dataset to relevant columns and find the smallest 3 trees in stand 3, year 2007
smallest_trees_2007 <- trees_data %>%
select(treeID, standID, year, rad_ib) %>%  # Keep only relevant columns
filter(standID == 3, year == 2007) %>%  # Filter for stand 3 in 2007
slice_min(rad_ib, n = 3)  # Get the 3 trees with the smallest rad_ib values
print(smallest_trees_2007)
trees_data_no_stand <- trees_data %>%
select(-stand)  # Remove the stand column
trees_data_no_stand <- trees_data %>%
select(-stand)  # Remove the stand column
glimpse(trees_data_no_stand)  # View dataset structure
trees_IDs <- trees_data %>%
select(contains("ID"))  # Select all columns with "ID" in the name
glimpse(trees_IDs)  # View the remaining dataset
trees_IDs <- trees_data %>%
select(contains("ID"))  # Select all columns with "ID" in the name
glimpse(trees_IDs)  # View the remaining dataset
# Question 12: Select columns containing 'ID' or 'stand'
selected_columns <- trees_data %>%
select(matches("ID|stand"))  # Select columns with 'ID' or 'stand' in the name
# Question 12: Select columns containing 'ID' or 'stand'
selected_columns <- trees_data %>%
select(matches("ID|stand"))  # Select columns with 'ID' or 'stand' in the name
glimpse(selected_columns)
trees_data <- trees_data %>%
rename(
rad_ib_cm = rad_ib,  # Assuming radius at breast height is in cm
inc_mm = inc  # Assuming increment growth is in mm
)
# Verify the changes
glimpse(trees_data)
trees_data <- trees_data %>%
rename(
rad_ib_mm = rad_ib,
inc_mm = inc
)
trees_data <- trees_data %>%
rename(
rad_ib_mm = rad_ib,
inc_mm = inc
)
trees_data <- trees_data %>%
mutate()
trees_data <- trees_data %>%
mutate(rad_ib_mm = rad_ib_cm * 10)
glimpse(trees_data)
trees_data <- trees_data %>%
mutate(
rad_ib_mm = rad_ib_cm * 10
trees_data <- trees_data %>%
trees_data <- trees_data %>%
mutate(rad_ib_mm = rad_ib_cm * 10)
glimpse(trees_data)
trees_data <- trees_data %>%
mutate(rad_ib_mm = rad_ib_cm * 10)
trees_data <- trees_data %>%
mutate(rad_ib_mm = rad_ib_cm * 10)
trees_data <- trees_data %>%
mutate(rad_ib_mm = rad_ib_cm * 10)
trees_data <- trees_data %>%
mutate(rad_ib_mm = rad_ib_cm * 10)
trees_data <- trees_data %>%
mutate(rad_ib_mm = rad_ib_cm * 10)
trees_data <- trees_data %>%
mutate(rad_ib_mm = rad_ib_cm * 10)
trees_data <- trees_data %>%
mutate(rad_ib_mm = rad_ib_cm * 10)
trees_data <- trees_data %>%
rename(
rad_ib_mm = rad_ib,
inc_mm = inc
)
glimpse(trees_data)
trees_data <- trees_data %>%
mutate(rad_ib_mm = rad_ib_cm * 10)
trees_data <- trees_data %>%
rename(
rad_ib_mm = rad_ib,
inc_mm = inc
)
colnames(trees_dat
gb\
colnames(trees_data)
trees_data <- trees_data %>%
mutate(
rad_ib_mm = rad_ib_cm * 10  # Convert cm to mm and store in rad_ib_mm
)
# View the updated dataset structure
glimpse(trees_data)
trees_data <- trees_data %>%
mutate(
DBH_cm = 2 * rad_ib_cm,  # Calculate DBH in cm
BA_m2 = 0.00007854 * DBH_cm^2  # Calculate Basal Area (BA) in m^2
)
# Filter for species "POTR" in 2007 and calculate the mean BA
mean_BA_POTR_2007 <- trees_data %>%
filter(species == "POTR", year == 2007) %>%
summarise(mean_BA = mean(BA_m2, na.rm = TRUE))  # Calculate mean BA, ignoring NA values
# Display the result
print(mean_BA_POTR_2007)
trees_data <- trees_data %>%
mutate(
DBH_cm = 2 * rad_ib_cm,  # Calculate DBH in cm
BA_m2 = 0.00007854 * DBH_cm^2  # Calculate Basal Area (BA) in m^2
# Filter for species "POTR" in 2007 and calculate the mean BA
mean_BA_POTR_2007 <- trees_data %>%
trees_data <- trees_data %>%
mutate(DBH_cm = 2 * rad_ib_cm, BA_m2 = 0.00007854 * DBH_cm^2)
# Filter for species "POTR" in 2007 and calculate the mean BA
mean_BA_POTR_2007 <- trees_data %>%
filter(species == "POTR", year == 2007) %>%
summarise(mean_BA = mean(BA_m2, na.rm = TRUE))  # Calculate mean BA, ignoring NA values
# Display the result
print(mean_BA_POTR_2007)
trees_data <- trees_data %>%
mutate(
established = if_else(age > 5, TRUE, FALSE)  # TRUE if age > 5, FALSE otherwise
)
# Count how many records are from established trees
count_established_trees <- trees_data %>%
count(established)
# Display the result
print(count_established_trees)
trees_data <- trees_data %>%
mutate(
DBH_class = case_when(
rad_ib_cm <= 2.5 ~ "seedling",  # DBH between 0 and 2.5 cm
rad_ib_cm > 2.5 & rad_ib_cm <= 10 ~ "sapling",  # DBH between 2.5 and 10 cm
rad_ib_cm > 10 & rad_ib_cm <= 30 ~ "pole",  # DBH between 10 and 30 cm
rad_ib_cm > 30 ~ "sawlog"  # DBH greater than 30 cm
)
)
# Filter for year 2007 and count the number of each DBH_class
count_DBH_class_2007 <- trees_data %>%
filter(year == 2007) %>%
count(DBH_class)
trees_data <- trees_data %>%
mutate(
DBH_class = case_when(
rad_ib_cm <= 2.5 ~ "seedling",  # DBH between 0 and 2.5 cm
rad_ib_cm > 2.5 & rad_ib_cm <= 10 ~ "sapling",  # DBH between 2.5 and 10 cm
rad_ib_cm > 10 & rad_ib_cm <= 30 ~ "pole",  # DBH between 10 and 30 cm
rad_ib_cm > 30 ~ "sawlog"  # DBH greater than 30 cm
)
count_DBH_class_2007 <- trees_data %>%
trees_data <- trees_data %>%
mutate(
DBH_class = case_when(
rad_ib_cm <= 2.5 ~ "seedling",  # DBH between 0 and 2.5 cm
rad_ib_cm > 2.5 & rad_ib_cm <= 10 ~ "sapling",  # DBH between 2.5 and 10 cm
rad_ib_cm > 10 & rad_ib_cm <= 30 ~ "pole",  # DBH between 10 and 30 cm
rad_ib_cm > 30 ~ "sawlog"  # DBH greater than 30 cm
)
)
# Filter for year 2007 and count the number of each DBH_class
count_DBH_class_2007 <- trees_data %>%
filter(year == 2007) %>%
count(DBH_class)
trees_data <- trees_data %>%
mutate(
DBH_class = case_when(
rad_ib_cm <= 2.5 ~ "seedling",  # DBH between 0 and 2.5 cm
rad_ib_cm > 2.5 & rad_ib_cm <= 10 ~ "sapling",  # DBH between 2.5 and 10 cm
rad_ib_cm > 10 & rad_ib_cm <= 30 ~ "pole",  # DBH between 10 and 30 cm
rad_ib_cm > 30 ~ "sawlog"  # DBH greater than 30 cm
)
)
# Filter for year 2007 and count the number of each DBH_class
count_DBH_class_2007 <- trees_data %>%
filter(year == 2007) %>%
count(DBH_class)
# Display the result
print(count_DBH_class_2007)
trees_data <- trees_data %>%
mutate(
DBH_class = case_when(
rad_ib_cm <= 2.5 ~ "seedling",  # DBH between 0 and 2.5 cm
rad_ib_cm > 2.5 & rad_ib_cm <= 10 ~ "sapling",  # DBH between 2.5 and 10 cm
rad_ib_cm > 10 & rad_ib_cm <= 30 ~ "pole",  # DBH between 10 and 30 cm
rad_ib_cm > 30 ~ "sawlog"  # DBH greater than 30 cm ))
# Filter for year 2007 and count the number of each DBH_class
count_DBH_class_2007 <- trees_data %>%
trees_data <- trees_data %>%
mutate(
DBH_class = case_when(
rad_ib_cm <= 2.5 ~ "seedling",  # DBH between 0 and 2.5 cm
rad_ib_cm > 2.5 & rad_ib_cm <= 10 ~ "sapling",  # DBH between 2.5 and 10 cm
rad_ib_cm > 10 & rad_ib_cm <= 30 ~ "pole",  # DBH between 10 and 30 cm
rad_ib_cm > 30 ~ "sawlog"  # DBH greater than 30 cm
)
)
# Filter for year 2007 and count the number of each DBH_class
count_DBH_class_2007 <- trees_data %>%
filter(year == 2007) %>%
count(DBH_class)
print(count_DBH_class_2007)
# Ensure DBH_class is a factor with a defined order
trees_data <- trees_data %>%
mutate(
DBH_class = factor(
case_when(
rad_ib_cm <= 2.5 ~ "seedling",  # DBH between 0 and 2.5 cm
rad_ib_cm > 2.5 & rad_ib_cm <= 10 ~ "sapling",  # DBH between 2.5 and 10 cm
rad_ib_cm > 10 & rad_ib_cm <= 30 ~ "pole",  # DBH between 10 and 30 cm
rad_ib_cm > 30 ~ "sawlog"  # DBH greater than 30 cm
),
levels = c("seedling", "sapling", "pole", "sawlog")  # Order of the classes
)
)
# Count the number of trees for each DBH_class in the year 2007
count_DBH_class_2007 <- trees_data %>%
filter(year == 2007) %>%
count(DBH_class)
# Display the results
print(count_DBH_class_2007)
db_classes_2007 <- trees_data %>%
filter(year == 2007) %>%
count(DBH_class)
# Check the distribution of DBH_class for the year 2007
db_classes_2007 <- trees_data %>%
filter(year == 2007) %>%
count(DBH_class)
# View the counts
print(db_classes_2007)
# Check the distribution of rad_ib_cm for the year 2007
radib_dist_2007 <- trees_data %>%
filter(year == 2007) %>%
summarize(min_rad = min(rad_ib_cm, na.rm = TRUE),
max_rad = max(rad_ib_cm, na.rm = TRUE),
mean_rad = mean(rad_ib_cm, na.rm = TRUE))
# Display the summary statistics
print(radib_dist_2007)
summary(trees_data$rad_ib_cm)  # Check summary statistics for the radius at breast height
hist(trees_data$rad_ib_cm)     # Visualize the distribution
trees_data <- trees_data %>%
mutate(
DBH_class = case_when(
rad_ib_cm <= 10 ~ "seedling",  # Adjusted to include more trees in the "seedling" class
rad_ib_cm > 10 & rad_ib_cm <= 30 ~ "sapling",
rad_ib_cm > 30 & rad_ib_cm <= 60 ~ "pole",
rad_ib_cm > 60 ~ "sawlog"
)
)
db_classes_2007 <- trees_data %>%
filter(year == 2007) %>%
count(DBH_class)
print(db_classes_2007)
trees_data <- trees_data %>%
mutate(
DBH_cm = 2 * rad_ib_cm,  # Compute DBH in cm
DBH_class = case_when(
DBH_cm <= 2.5 ~ "seedling",  # DBH between 0 and 2.5 cm
DBH_cm > 2.5 & DBH_cm <= 10 ~ "sapling",  # DBH between 2.5 and 10 cm
DBH_cm > 10 & DBH_cm <= 30 ~ "pole",  # DBH between 10 and 30 cm
DBH_cm > 30 ~ "sawlog"  # DBH greater than 30 cm
)
)
# Filter for year 2007 and count the number of each DBH_class
db_classes_2007 <- trees_data %>%
filter(year == 2007) %>%
count(DBH_class)
# View the results
print(db_classes_2007)
summary(trees_data$DBH_cm)
trees_data <- trees_data %>%
mutate(
# Convert rad_ib_mm to rad_ib_cm
rad_ib_cm = rad_ib_mm / 10,
# Classify the DBH based on the original thresholds
DBH_class = case_when(
rad_ib_cm <= 2.5 ~ "seedling",  # DBH between 0 and 2.5 cm
rad_ib_cm > 2.5 & rad_ib_cm <= 10 ~ "sapling",  # DBH between 2.5 and 10 cm
rad_ib_cm > 10 & rad_ib_cm <= 30 ~ "pole",  # DBH between 10 and 30 cm
rad_ib_cm > 30 ~ "sawlog"  # DBH greater than 30 cm
)
)
# Filter for year 2007 and count the number of each DBH_class
db_classes_2007 <- trees_data %>%
filter(year == 2007) %>%
count(DBH_class)
# View the results
print(db_classes_2007)
trees_data <- trees_data %>%
mutate(
DBH_class = case_when(
DBH_cm <= 2.5 ~ "seedling",   # DBH between 0 and 2.5 cm
DBH_cm > 2.5 & DBH_cm <= 10 ~ "sapling",  # DBH between 2.5 and 10 cm
DBH_cm > 10 & DBH_cm <= 30 ~ "pole",  # DBH between 10 and 30 cm
DBH_cm > 30 ~ "sawlog"  # DBH greater than 30 cm
)
)
# Step 3: Filter for year 2007 and count the number of each class
db_classes_2007 <- trees_data %>%
filter(year == 2007) %>%
count(DBH_class)
# View the results
print(db_classes_2007)
summary(trees_data$DBH_cm)
trees_data <- trees_data %>%
mutate(
DBH_class = case_when(
DBH_cm < 5 ~ "seedling",    # DBH less than 5 cm
DBH_cm >= 5 & DBH_cm < 20 ~ "sapling",  # DBH between 5 and 20 cm
DBH_cm >= 20 & DBH_cm < 50 ~ "pole",  # DBH between 20 and 50 cm
DBH_cm >= 50 ~ "sawlog"  # DBH greater than or equal to 50 cm
)
)
# Filter for year 2007 and count the number of each class
db_classes_2007 <- trees_data %>%
filter(year == 2007) %>%
count(DBH_class)
# View the results
print(db_classes_2007)
trees_data <- trees_data %>%
mutate(
DBH_class = case_when(
DBH_cm < 5 ~ "seedling",    # DBH less than 5 cm
DBH_cm >= 5 & DBH_cm < 20 ~ "sapling",  # DBH between 5 and 20 cm
DBH_cm >= 20 & DBH_cm < 50 ~ "pole",  # DBH between 20 and 50 cm
DBH_cm >= 50 ~ "sawlog"  # DBH greater than or equal to 50 cm
)
db_classes_2007 <- trees_data %>%
trees_data <- trees_data %>%
mutate(
DBH_class = case_when(
DBH_cm < 5 ~ "seedling",    # DBH less than 5 cm
DBH_cm >= 5 & DBH_cm < 20 ~ "sapling",  # DBH between 5 and 20 cm
DBH_cm >= 20 & DBH_cm < 50 ~ "pole",  # DBH between 20 and 50 cm
DBH_cm >= 50 ~ "sawlog"  # DBH greater than or equal to 50 cm
)
)
# Filter for year 2007 and count the number of each class
db_classes_2007 <- trees_data %>%
filter(year == 2007) %>%
count(DBH_class)
# View the results
print(db_classes_2007)
trees_data <- trees_data %>%
mutate(
DBH_class = case_when(
DBH_cm < 10 ~ "seedling",      # DBH less than 10 cm
DBH_cm >= 10 & DBH_cm < 50 ~ "sapling",  # DBH between 10 and 50 cm
DBH_cm >= 50 & DBH_cm < 150 ~ "pole",  # DBH between 50 and 150 cm
DBH_cm >= 150 ~ "sawlog"  # DBH greater than or equal to 150 cm
)
)
db_classes_2007 <- trees_data %>%
filter(year == 2007) %>%
count(DBH_class)
# View the results
print(db_classes_2007)
trees_data <- trees_data %>%
mutate(established = if_else(age > 5, TRUE, FALSE)  # TRUE if age > 5, FALSE otherwise)
# Count how many records are from established trees
count_established_trees <- trees_data %>%
trees_data <- trees_data %>%
mutate(established = if_else(age > 5, TRUE, FALSE)  # TRUE if age > 5, FALSE otherwise)
# Count how many records are from established trees
count_established_trees <- trees_data %>%
count_established_trees <- trees_data %>%
count(established)
print(count_established_trees)
trees_data <- trees_data %>%
mutate(established = if_else(age > 5, TRUE, FALSE)  # TRUE if age > 5, FALSE otherwise)
trees_data <- trees_data %>%
trees_data <- trees_data %>%
mutate(established = if_else(age > 5, TRUE, FALSE))  # TRUE if age > 5, FALSE otherwise
# Now, you can count how many records are from established trees
count_established_trees <- trees_data %>%
count(established)
# View the result
print(count_established_trees)
trees_data <- trees_data %>%
mutate(DBH_class = case_when(
DBH_cm < 10 ~ "Small",
DBH_cm >= 10 & DBH_cm < 30 ~ "Medium",
DBH_cm >= 30 ~ "Large"
))
print(db_classes_2007)
trees_data <- trees_data %>%
mutate(DBH_class = case_when(
DBH_cm < 10 ~ "Small",
DBH_cm >= 10 & DBH_cm < 30 ~ "Medium",
DBH_cm >= 30 ~ "Large"
))
print(db_classes_2007)
dbh_summary_2007 <- trees_data %>%
filter(year == 2007) %>%  # Filter for 2007
summarize(
mean_DBH = mean(rad_ib_cm, na.rm = TRUE),  # Mean DBH in cm
sd_DBH = sd(rad_ib_cm, na.rm = TRUE)  # Standard deviation of DBH in cm
)
# View the summary statistics
print(dbh_summary_2007)
mean_age_species_2003 <- trees_data %>%
filter(year == 2003) %>%  # Filter for 2003
group_by(species) %>%  # Group by species
summarize(mean_age = mean(age, na.rm = TRUE)) %>%  # Calculate mean age
arrange(desc(mean_age)) %>%  # Arrange by mean age in descending order
slice_head(n = 3)  # Get the top 3 species with the oldest mean age
# View the results
print(mean_age_species_2003)
year_summary <- trees_data %>%
summarize(
unique_years = n_distinct(year),
first_year = min(year),
last_year = max(year)
)
print(year_summary)
stands_with_largest_years <- trees_data %>%
group_by(stand) %>%  # Group by stand
summarize(unique_years = n_distinct(year)) %>%  # Count unique years per stand
filter(unique_years == max(unique_years))  # Filter stands with the maximum unique years
# View the result
print(stands_with_largest_years)
trees_data <- trees_data %>%
group_by(treeID) %>%  # Group by treeID
mutate(
growth_rate = rad_ib_cm - lag(rad_ib_cm),  # Compute annual growth by subtracting previous year radius
years_recorded = n()  # Count the number of years recorded for each tree
) %>%
ungroup()  # Ungroup after mutation
# Step 2: Filter out trees with less than 10 years of growth
trees_with_min_growth <- trees_data %>%
filter(years_recorded >= 10)
# Step 3: Compute the total growth, average growth rate, and standard deviation of growth by species
growth_summary <- trees_with_min_growth %>%
group_by(species) %>%
summarize(
total_growth = sum(growth_rate, na.rm = TRUE),  # Sum of growth rates
avg_growth = mean(growth_rate, na.rm = TRUE),   # Average growth rate
sd_growth = sd(growth_rate, na.rm = TRUE),      # Standard deviation of growth rates
.groups = "drop"
)
# Step 4: Identify the 3 species with the fastest and slowest growth
fastest_growth_species <- growth_summary %>%
arrange(desc(avg_growth)) %>%
head(3)  # Get top 3 fastest-growing species
slowest_growth_species <- growth_summary %>%
arrange(avg_growth) %>%
head(3)  # Get top 3 slowest-growing species
# Print the results
print("Fastest Growing Species:")
print(fastest_growth_species)
print("Slowest Growing Species:")
print(slowest_growth_species)
dir.create("images")
image_path <- "images/red-pine-pinus-resinose-catalog.jpg.webp"
img <- image_read(image_path)
image_path <- "images/red-pine-pinus-resinose-catalog.jpg.webp"
img <- image_read(images/red-pine-pinus-resinose-catalog.jpg.webp)
install.packages("magick")  # Run this only once to install the package
library(magick)             # Load the package into your R session
image_path <- "images/red-pine-pinus-resinose-catalog.jpg.webp"
img <- image_read(images/red-pine-pinus-resinose-catalog.jpg.webp)
image_path <- "images/red-pine.webp"
img <- image_read(images/red-pine.webp)
# Correct path to the image file as a string
image_path <- "images/red-pine.webp"
# Use image_read() to read the image
img <- image_read(image_path)
# Display the image
print(img)
list.files("images")
# Red Pine "Pinus Resinosa" Image
rmarkdown::render("Lab_2.Rmd")
rmarkdown::render("Lab 2.Rproj")
cd
git branch
